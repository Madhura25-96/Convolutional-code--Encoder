clear
a = input('Enter the number of rows');
b = input('Enter the number of columns');
for i=1:a
  for j=1:b
   p(i,j) = input('Enter the elements of generator polynomial');
  end
end
p=reshape(p,a,b)
%g= [1 1 1;1 1 0];%generator polynomials
[n,K] = size(p);
%size meaning it took the matrix 'g'. [2,3]
m = K-1;%number of registers
%m = 3-1 = 2;
state = zeros(1,m);%set registers to zero
%state = 0 0 less than memory.
count = 1;
x = [];
disp(x);
for count = 1:4
 r = input('Enter the input source number');
 x = [x r];
 if count <= 3
   count = count + 1;
 else
  count;
 end
end
%inputx=[0 1 0 1 ];%encoder input source code
%inputx: no of rows followed by no of columns.
[trash,h]=size(x);
outputy=[];
% empty array for storing variables.
for c=1:h % h=number of input bits , no of input bits loop for retreiving one element.
    input = x(1,c); %here x is for choosing only one element from inputx.
for i=1:n % so multiply for every row input and generator
  output(i) = p(i,1)*input;
  for j=2:K % 3 elements here, then what ?
     z=p(i,j)*state(j-1);
     disp(z); 
     output(i) = xor(output(i),z);
   end
 end
 % This operation is specifically for shifting the input to states.
 state = [input, state(1:m-1)];
  outputy=[outputy,output];%new element added to sequence
  %final encoder output in command window
end
disp(outputy);
